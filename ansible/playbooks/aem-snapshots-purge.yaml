---

- name: Deploy AEM Snapshots Purge Cloud Native Solution
  hosts: all
  gather_facts: no
  connection: local
  force_handlers: True
  vars:
    stack_manager_cwd: "{{ playbook_dir }}/../.."
    stack_manager_tmp: "{{ playbook_dir }}/../../stack_manager_tmp"

  tasks:
    - name: Create A Temp Working Directory
      file:
        path: "{{ stack_manager_tmp }}"
        state: directory
        mode: 0755
      notify: Clean Up Temp Folder
      tags:
        - create

    - name: Zip AEM Snapshots Purge Lambda Implementation
      command: >
        zip -j "{{ stack_manager_tmp }}/purge_snapshots.zip" "{{ stack_manager_cwd }}/lambda/purge_snapshots.py"
      tags:
        - create

    - name: Upload Lambada Function Zip Archive to S3
      s3:
        mode: put
        src: "{{ stack_manager_tmp }}/purge_snapshots.zip"
        bucket: "{{ stack_manager.s3_bucket }}"
        object: "{{ stack_manager.s3_prefix }}/purge_snapshots.zip"
        region: "{{ aws.region }}"
      tags:
        - create

    - name: >
        Create Snapshots Purge Cloud Native Solution Related Resources Using CloudFormation
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ snapshots_purge.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: false
        template: "{{ stack_manager_cwd }}/cloudformation/aem-snapshots-purge.yaml"
        template_parameters:
          S3Bucket: "{{ stack_manager.s3_bucket }}"
          S3Prefix: " {{ stack_manager.s3_prefix }}"
          Version: "{{ stack_manager.version}}"
          StackPrefix: "{{ stack_prefix }}"
          UseGlobalDefaults: "{{ snapshots_purge.UseGlobalDefaults }}"
          LiveSnapshotsPurgeSchedule: "{{ snapshots_purge.LiveSnapshotsPurgeSchedule}}"
          OfflineSnapshotsPurgeSchedule: "{{ snapshots_purge.OfflineSnapshotsPurgeSchedule }}"
          OrchestrationSnapshotsPurgeSchedule: "{{ snapshots_purge.OrchestrationSnapshotsPurgeSchedule }}"
          LiveSnapshotsPurgeInput: "{{ snapshots_purge.LiveSnapshotsPurgeInput }}"
          OfflineSnapshotsPurgeInput: " {{ snapshots_purge.OfflineSnapshotsPurgeInput }}"
          OrchestrationSnapshotsPurgeInput: "{{ snapshots_purge.OrchestrationSnapshotsPurgeInput }}"
      register: stack_info
      tags:
        - create

    - name: Check if Snapshots Purge Stack Exists
      command: >
        aws cloudformation describe-stacks --stack-name "{{ stack_prefix }}-{{ snapshots_purge.stack_name }}"
             --query 'Stacks[].StackName' --region "{{ aws.region }}"
      ignore_errors: True
      register: stack_query
      tags:
        - delete

    - name: Report Snapshots Purge Stack Problem if Any
      debug:
        msg: Stack "{{ stack_prefix }}-{{ snapshots_purge.stack_name }}" does not exist or some other errors occured
      when:
        "stack_query.rc != 0"
      tags:
        - delete

    - name: Delete AEM Snapshots Purge Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{  snapshots_purge.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      when:
        "stack_query.rc == 0"
      tags:
        - delete

  handlers:
    - name: Clean Up Temp Folder
      file:
        path: "{{ stack_manager_tmp }}"
        state: absent
