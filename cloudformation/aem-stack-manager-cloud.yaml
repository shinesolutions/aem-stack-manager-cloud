AWSTemplateFormatVersion: '2010-09-09'

Description: Create AWS Lambada Implementation of AEM Stack Mananger Resources

Parameters:
  S3Bucket:
    Type: String
    Description: Bucket name that stores files used by the functions
    Default: aem-stack-builder

  S3Prefix:
    Type: String
    Description: Prefix within the bucket to locate files
    Default: andy

  Version:
    Type: String
    Description: AEM Stack Manager Version
    Default: "v2"
  
  StackPrefix:
    Type: String
    Description: AEM Stack Manager Prefix
    Default: AEM-Stack

Resources:
  StackManagerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: command_id
          AttributeType: S
        -
          AttributeName: externalId
          AttributeType: S
        -
          AttributeName: timestamp
          AttributeType: S

      KeySchema:
        -
          AttributeName: command_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        -
          IndexName: ExternalQuery
          KeySchema:
            - AttributeName: externalId
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - state
            ProjectionType: INCLUDE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      TableName: !Sub ${StackPrefix}-AemStackManagerTable${Version}

  StackManagerTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AEM Stack Manager Topic
      TopicName: !Sub ${StackPrefix}-AemStackManager${Version}

  TaskStatusTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub AEM Stack Manager Topic
      TopicName: !Sub ${StackPrefix}-AemStackManagerStatus${Version}

  LambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::Region}-${StackPrefix}-aem-stack-manager${Version}-lambda-service-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: StackManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:Describe*"
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - "autoscaling:Describe*"
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:EnterStandby
                  - autoscaling:ExitStandby
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource: !Sub "arn:aws:s3:::${S3Bucket}/${S3Prefix}/*"
              - Effect: Allow
                Action:
                  - ssm:SendCommand
                  - ssm:CancelCommand
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:UpdateTimeToLive
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${StackManagerTable}
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${StackManagerTable}/index/*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt SSMServiceRole.Arn
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref TaskStatusTopic

  ManagerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: AEM Stack Manager Function
      FunctionName: !Sub ${StackPrefix}-AemStackManager${Version}
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Sub ${S3Prefix}/aem_stack_manager.zip
      Environment:
        Variables:
          LOG_LEVEL: "20"
          S3_BUCKET: !Ref S3Bucket
          S3_PREFIX: !Ref S3Prefix
      Handler: aem_stack_manager.sns_message_processor
      MemorySize: 128
      Role: !GetAtt LambdaServiceRole.Arn
      Runtime: python2.7
      Timeout: 15

  InitialVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: Initial Version to Start With
      FunctionName: !Ref ManagerLambdaFunction

  LambdaDevAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Development Use
      FunctionName: !Ref ManagerLambdaFunction
      FunctionVersion: "$LATEST"
      Name: dev

  LambdaProdAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Production Use
      FunctionName: !Ref ManagerLambdaFunction
      FunctionVersion: !GetAtt InitialVersion.Version
      Name: prod

  QueryLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: AEM Task Status Query
      FunctionName: !Sub ${StackPrefix}-AemTaskQuery${Version}
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Sub ${S3Prefix}/aem_task_query.zip
      Environment:
        Variables:
          LOG_LEVEL: "20"
          S3_BUCKET: !Ref S3Bucket
          S3_PREFIX: !Ref S3Prefix
      Handler: aem_task_query.handler
      MemorySize: 128
      Role: !GetAtt LambdaServiceRole.Arn
      Runtime: python2.7
      Timeout: 15

  QueryInitialVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: Initial Version to Start With
      FunctionName: !Ref QueryLambdaFunction

  QueryLambdaDevAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Development Use
      FunctionName: !Ref QueryLambdaFunction
      FunctionVersion: "$LATEST"
      Name: dev

  QueryLambdaProdAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Production Use
      FunctionName: !Ref QueryLambdaFunction
      FunctionVersion: !GetAtt QueryInitialVersion.Version
      Name: prod

  ManagerTopicPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaProdAlias
      Principal: sns.amazonaws.com
      SourceArn: !Ref StackManagerTopic

  ManagerTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref LambdaProdAlias
      Protocol: lambda
      TopicArn: !Ref StackManagerTopic

  SatusTopicPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaProdAlias
      Principal: sns.amazonaws.com
      SourceArn: !Ref TaskStatusTopic

  StatusTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref LambdaProdAlias
      Protocol: lambda
      TopicArn: !Ref TaskStatusTopic

  OfflineBackupTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AEM Backup
      TopicName: !Sub ${StackPrefix}-AemOfflineBackup${Version}

  OfflineBackupLambada:
    Type: AWS::Lambda::Function
    Properties:
      Description: AEM Offline Backup Function
      FunctionName: !Sub ${StackPrefix}-AemOfflineBackup${Version}
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Sub ${S3Prefix}/aem_offline_snapshot.zip
      Environment:
        Variables:
          LOG_LEVEL: "20"
          S3_BUCKET: !Ref S3Bucket
          S3_PREFIX: !Ref S3Prefix
      Handler: aem_offline_snapshot.sns_message_processor
      MemorySize: 128
      Role: !GetAtt LambdaServiceRole.Arn
      Runtime: python2.7
      Timeout: 15

  BackupInitialVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: Initial Version to Start With
      FunctionName: !Ref OfflineBackupLambada

  BackupLambdaDevAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Development Use
      FunctionName: !Ref OfflineBackupLambada
      FunctionVersion: "$LATEST"
      Name: dev

  BackupLambdaProdAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Lambda Alias for Production Use
      FunctionName: !Ref OfflineBackupLambada
      FunctionVersion: !GetAtt BackupInitialVersion.Version
      Name: prod

  BackupLambadaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref BackupLambdaProdAlias
      Principal: sns.amazonaws.com
      SourceArn: !Ref OfflineBackupTopic

  BackupSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref BackupLambdaProdAlias
      Protocol: lambda
      TopicArn: !Ref OfflineBackupTopic

  SSMServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AemBackupPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - !Sub "arn:aws:s3:::${S3Bucket}/SSMOutput/*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref OfflineBackupTopic
                  - !Ref TaskStatusTopic
      RoleName: !Sub ${AWS::Region}-${StackPrefix}-aem-stack-manager${Version}-service-role

Outputs:
  SSMServiceRoleArn:
    Description: SSM service role allowing output to s3 and send sns notification
    Value: !GetAtt SSMServiceRole.Arn

  StackManagerTopciArn:
    Description: AEM stack manager SNS topic Arn
    Value: !Ref StackManagerTopic

  BackupTopicArn:
    Description: SNS topic Arn used to orchestrate offline backup
    Value: !Ref OfflineBackupTopic

  TaskStatusTopicArn:
    Description: SNS toptic Arn to notifiy status of stack manager functions
    Value: !Ref TaskStatusTopic

  AemStackManagerTableName:
    Description: DynamoDB table name for AEM stack manager
    Value: !Ref StackManagerTable

  TaskStatusQueryLambda:
    Description: Task status quer lambda function name
    Value: !Ref QueryLambdaFunction
